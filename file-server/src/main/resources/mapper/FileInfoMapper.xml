<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.tiliang.fileserver.mapper.FileInfoMapper">
  <resultMap id="BaseResultMap" type="top.tiliang.fileserver.entity.FileInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="size" jdbcType="BIGINT" property="size" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="original_name" jdbcType="VARCHAR" property="originalName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="dir" jdbcType="VARCHAR" property="dir" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, size, type, original_name, create_time, dir
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from file_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByName" resultType="top.tiliang.fileserver.entity.FileInfo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from file_info
    where `name` = #{name,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from file_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="top.tiliang.fileserver.entity.FileInfo">
    insert into file_info (id, name, size, 
      type, original_name, create_time, 
      dir)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{size,jdbcType=BIGINT}, 
      #{type,jdbcType=VARCHAR}, #{originalName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{dir,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="top.tiliang.fileserver.entity.FileInfo">
    insert into file_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="originalName != null">
        original_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="dir != null">
        dir,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="originalName != null">
        #{originalName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dir != null">
        #{dir,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.tiliang.fileserver.entity.FileInfo">
    update file_info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="originalName != null">
        original_name = #{originalName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dir != null">
        dir = #{dir,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.tiliang.fileserver.entity.FileInfo">
    update file_info
    set name = #{name,jdbcType=VARCHAR},
      size = #{size,jdbcType=BIGINT},
      type = #{type,jdbcType=VARCHAR},
      original_name = #{originalName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      dir = #{dir,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>